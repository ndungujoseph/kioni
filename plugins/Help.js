/* Codded by @phaticusthiccy
Telegram: t.me/phaticusthiccy
Instagram: www.instagram.com/kyrie.baran
*/

const Asena = require('../events');
const {MessageType, MessageOptions} = require('@adiwajshing/baileys');
const Config = require('../config');

// ==================== MAIN DESCRIPTION TEXT ====================
const h_Des = "YardÄ±m menÃ¼sÃ¼nden botu kullanÄ±m hakkÄ±nda bilgi verir."
const h_DedEN = "Gives information about using the bot from the Help menu."
const matchnullEN = "========== *ğŸ†˜ General Help ğŸ†˜* ==========\n\nğŸ”¹ *.alive:* Checks if the bot is running.\n\nğŸ”¹ *.asena:* Shows the complete list of commands.\nğŸ”¹ *.setvar:* It settings config without entering Heroku.\n\nğŸ”¸ For more help, use the command ```.help <the topic you want help with>```\nExample: ```.help how can Ä± turn to public my bot?```\n\n========== *End General Help* =========="
const matchnull = "========== *ğŸ†˜ Genel YardÄ±m ğŸ†˜* ==========\n\nğŸ”¹ *.alive:* Botun Ã§alÄ±ÅŸÄ±p Ã§alÄ±ÅŸmadÄ±ÄŸÄ±nÄ± kontrol eder.\nğŸ”¹ *.asena:* TÃ¼m komut listesini gÃ¶sterir.\nğŸ”¹ *.setvar:* Herokuya girmeden config ayarlar.\n\nğŸ”¸ Daha fazla yardÄ±m iÃ§in ```.help <yardÄ±m almak istediÄŸiniz konu>``` komutunu kullanÄ±n.\nÃ–rnek: ```.help botumu nasÄ±l public yaparÄ±m?```\n\n========== *Genel YardÄ±m Bitti* =========="
const notfound = "```Almak istediÄŸiniz yardÄ±m bulunamadÄ±!```\n```LÃ¼tfen daha aÃ§Ä±klayÄ±cÄ± bir ÅŸekilde sorunu belirtin.```"
const notfoundEN = "```The help you wanted to get was not found!```\n```Please state the problem in a more descriptive way.```"

// ==================== ALL DESCRÄ°PTÄ°ONS ====================
const pubTR = "Botunuzu public yapmak komutlarÄ± herkese aÃ§Ä±k yapacaktÄ±r. Public yapÄ±ldÄ±ktan sonra kullanÄ±cÄ± sadece kiÅŸisel ve admin komutlarÄ±nÄ± kullanabilir hale gelir. Onun dÄ±ÅŸÄ±nda komutlarÄ± kullanamaz.\nBotunuzu public yapmak iÃ§in *.setvar WORK_TYPE:public* komutunu kullanÄ±n."
const pubEN = "Making your bot public will make the commands public. After it is made public, the user can only use personal and admin commands. User cannot use commands other than this.\n To make your bot public, type *.setvar WORK_TYPE:public*"

const privTR = "Botunuzu private yapmak komutlarÄ± sadece size Ã¶zel yapar. BaÅŸkalarÄ± kullanamaz.\nBotunuzu private yapmak iÃ§in *.setvar WORK_TYPE:private* komutunu kullanÄ±n."
const privEN = "Making your bot private makes commands private only for you. Anyone cannot use.\nTo make your bot private, type *.setvar WORK_TYPE:private*"


if (Config.LANG == 'TR' || Config.LANG == 'AZ') {
    
    Asena.addCommand({pattern: 'help ?(.*)', fromMe: true, desc: h_Des}, (async (message, match) => {

        if (match[1] === '') {
            return await message.client.sendMessage(
                message.jid,
                matchnull,
                MessageType.text
            );
        }
        else if ( (match[1].includes('public') && match[1].includes('nasÄ±l')) || (match[1].includes('public') && match[1].includes('yapimi')) || (match[1].includes('public') && match[1].includes('yapÄ±mÄ±')) ) {
            return await message.client.sendMessage(
                message.jid,
                pubTR,
                MessageType.text
            );
        }
        else if ( (match[1].includes('private') && match[1].includes('nasÄ±l')) || (match[1].includes('private') && match[1].includes('yapimi')) || (match[1].includes('private') && match[1].includes('yapÄ±mÄ±')) ) {
            return await message.client.sendMessage(
                message.jid,
                privTR,
                MessageType.text
            );
        }
        else {
            return await message.client.sendMessage(
                message.jid,
                notfound,
                MessageType.text
            );
        }
    }));
}
else {
    
    Asena.addCommand({pattern: 'help ?(.*)', fromMe: true, desc: h_DedEN}, (async (message, match) => {

        if (match[1] === '') {
            return await message.client.sendMessage(
                message.jid,
                matchnullEN,
                MessageType.text
            );
        }
        else if ( (match[1].includes('public') && match[1].includes('how')) || (match[1].includes('public') && match[1].includes('set')) || (match[1].includes('public') && match[1].includes('setting')) ) {
            return await message.client.sendMessage(
                message.jid,
                pubEN,
                MessageType.text
            );
        }
        else if ( (match[1].includes('private') && match[1].includes('how')) || (match[1].includes('private') && match[1].includes('set')) || (match[1].includes('private') && match[1].includes('setting')) ) {
            return await message.client.sendMessage(
                message.jid,
                privEN,
                MessageType.text
            );
        }
        else {
            return await message.client.sendMessage(
                message.jid,
                notfoundEN,
                MessageType.text
            );
        }
    }));
}
